package views;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import entities.AulaTeorica;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Locale;

public class PanelAulas extends JPanel {

    public JPanel mainPainel;
    public JLabel dataLabel;
    private JLabel horarioLabel;
    private JLabel disciplinaLabel;
    private AulaTeorica aulaTeorica;

    public PanelAulas(AulaTeorica aulaTeorica) {
        this.aulaTeorica = aulaTeorica;
        this.dataLabel.setText(aulaTeorica.getData());
        this.horarioLabel.setText(aulaTeorica.getHorario());
        this.disciplinaLabel.setText(aulaTeorica.getDisciplina().getNome());
    }

    public AulaTeorica getAulaTeorica() {
        return aulaTeorica;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPainel = new JPanel();
        mainPainel.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 3, 0), -1, -1));
        mainPainel.setBackground(new Color(-1));
        mainPainel.setForeground(new Color(-14671323));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(1, 4, new Insets(0, 0, 0, 0), -1, -1));
        panel1.setBackground(new Color(-13684426));
        mainPainel.add(panel1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setBackground(new Color(-16777216));
        Font label1Font = this.$$$getFont$$$(null, Font.BOLD, 14, label1.getFont());
        if (label1Font != null) label1.setFont(label1Font);
        label1.setForeground(new Color(-1));
        label1.setText("Aula TeÃ³rica");
        panel1.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        dataLabel = new JLabel();
        dataLabel.setBackground(new Color(-14671323));
        Font dataLabelFont = this.$$$getFont$$$(null, Font.BOLD, 14, dataLabel.getFont());
        if (dataLabelFont != null) dataLabel.setFont(dataLabelFont);
        dataLabel.setForeground(new Color(-1));
        dataLabel.setText("Data");
        panel1.add(dataLabel, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        horarioLabel = new JLabel();
        horarioLabel.setBackground(new Color(-14671323));
        Font horarioLabelFont = this.$$$getFont$$$(null, Font.BOLD, 14, horarioLabel.getFont());
        if (horarioLabelFont != null) horarioLabel.setFont(horarioLabelFont);
        horarioLabel.setForeground(new Color(-1));
        horarioLabel.setText("Horairo");
        panel1.add(horarioLabel, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        disciplinaLabel = new JLabel();
        disciplinaLabel.setBackground(new Color(-14671323));
        Font disciplinaLabelFont = this.$$$getFont$$$(null, Font.BOLD, 14, disciplinaLabel.getFont());
        if (disciplinaLabelFont != null) disciplinaLabel.setFont(disciplinaLabelFont);
        disciplinaLabel.setForeground(new Color(-1));
        disciplinaLabel.setText("Disciplina");
        panel1.add(disciplinaLabel, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPainel;
    }

}
